camel:
  springboot:
    main-run-controller: true

prestashop:
  updateStockTemplate: >
    <prestashop xmlns:xlink="http://www.w3.org/1999/xlink">
    	<stock_available>
    		<id>{ID}</id>
    		<id_product>{PRODUCT_ID}</id_product>
    		<id_product_attribute>{PRODUCT_ATTRIBUTE}</id_product_attribute>
            <id_shop>{ID_SHOP}</id_shop>
            <id_shop_group>{ID_SHOP_GROUP}</id_shop_group>
    		<quantity>{STOCK}</quantity>
    		<depends_on_stock>{DEPENDS_ON_STOCK}</depends_on_stock>
    		<out_of_stock>{OUT_OF_STOCK}</out_of_stock>
    	</stock_available>
    </prestashop>

spring:
  datasource:
    driver-class-name: net.sourceforge.jtds.jdbc.Driver
    hikari:
      connection-test-query: SELECT 1
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: validate
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
  batch:
    job:
      enabled: false
    initialize-schema: never

  profiles:
    active: development

route:
  orderstats:
    enabled: true
  reindexer:
    enabled: true
  products:
    enabled: true
  promofarma-invoices:
    enabled: true

sql:
  warehouseId: 1
  allArticles: >
    SELECT DISTINCT a.IdArticu as id, a.Descripcion as name, aa.StockActual as stock, s.Sinonimo as ean
    FROM Articu a
    LEFT JOIN Sinonimo s ON s.IdArticu = a.IdArticu  AND LEN(s.Sinonimo) = 13
    INNER JOIN AlmArticu aa ON aa.IdArticu = a.IdArticu AND aa.IdAlmacen = %d;
  stockVariations: >
    SELECT DISTINCT *
    FROM (
        SELECT DISTINCT a.IdArticu as id, a.Descripcion as name, aa.StockActual as stock
        FROM LINEARECEP lr
          INNER JOIN Recep r ON r.IdRecepcion = lr.IdRecepcion
          INNER JOIN Articu a ON lr.XArt_IdArticu = a.IdArticu
          INNER JOIN AlmArticu aa ON aa.IdArticu = a.IdArticu AND aa.IdAlmacen = %d
        WHERE
        Hora >= DATEADD(minute, -11, GETDATE())
          AND Hora <= GETDATE()
      UNION
        SELECT DISTINCT a.IdArticu, a.Descripcion, aa.StockActual
        FROM LineaVenta lv
          INNER JOIN Venta v ON v.IdVenta = lv.IdVenta
          INNER JOIN Articu a ON lv.Codigo = a.IdArticu
          INNER JOIN AlmArticu aa ON aa.IdArticu = a.IdArticu AND aa.IdAlmacen = %d
        WHERE
        FechaHora >= DATEADD(minute, -11, GETDATE())
          AND FechaHora <= GETDATE()
    ) AuxTbl;
  pucsInDate: >
    SELECT a.IdArticu, COALESCE(Aux2.Puc, a.Puc) as Puc
    FROM Articu a
    LEFT JOIN (
      SELECT Aux3.IdArticu, Aux3.FechaHora, Aux3.Puc
      FROM (
        SELECT IdArticu, FechaHora, PucNew as Puc
        FROM ChgPuc
        UNION
        SELECT L.XArt_IdArticu as IdArticu, R.Hora as FechaHora, L.ImportePuc as Puc
        FROM Recep R
        INNER JOIN LINEARECEP L on R.IdRecepcion = L.IdRecepcion
      ) Aux3
      INNER JOIN (
        SELECT Aux1.IdArticu as IdArticu, MAX(Aux1.FechaHora) as FechaHora
        FROM (
          SELECT IdArticu, FechaHora
          FROM ChgPuc
          UNION
          SELECT L.XArt_IdArticu as IdArticu, R.Hora as FechaHora
          FROM Recep R
          INNER JOIN LINEARECEP L on R.IdRecepcion = L.IdRecepcion
        ) Aux1
        WHERE Aux1.IdArticu IN (${headers.productIds})
          AND Aux1.FechaHora <= CONVERT(datetime, '${headers.invoiceDate}', 126)
        GROUP BY Aux1.IdArticu
      ) Aux4 ON Aux3.IdArticu = Aux4.IdArticu AND Aux3.FechaHora = Aux4.FechaHora
      WHERE Aux3.FechaHora <= CONVERT(datetime, '${headers.invoiceDate}', 126)
    ) Aux2 ON Aux2.IdArticu = a.IdArticu
    WHERE a.IdArticu IN (${headers.productIds})
